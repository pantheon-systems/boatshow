"use strict";

(function ($, Drupal) {
  var drawerWrapper = $("<div class='js-boat-brand-drawer-container boat-brand__drawer-container' />");

  var getScreen = function getScreen() {
    var screen = "xs";

    // Mobile and Above
    if (window.matchMedia('(min-width: 576px)').matches) {
      screen = "sm";
    }

    // Tablet and Above
    if (window.matchMedia('(min-width: 768px)').matches) {
      screen = "md";
    }

    return screen;
  };

  var closeContainer = function closeContainer() {
    $(".js-boat-brand-drawer-container").slideUp(function () {
      $(this).remove();
    });
    $(".js-boat-brand-item").removeClass("active");
  };

  Drupal.behaviors.brandGrid = {
    attach: function attach(context, settings) {
      var allItems = $(".js-boat-brand-item").eq(0).closest("[class*=col-]").parent().children("[class*=col-]");

      $('.js-boat-brand-item').once().click(function (e) {
        e.preventDefault();
        var target = $(e.target).closest(".js-boat-brand-item");
        var dataIndex = target.attr("data-index").replace(/<!--(.*?)-->/g, "").trim();
        var content = $(".js-boat-brand-drawer-content[data-index='" + dataIndex + "']").clone().removeAttr("data-index");
        var item = target.closest("[class*=col-]");
        var rowEnd = item;
        var container;
        var i = item.index();

        if (content.length) {
          $(".js-boat-brand-item").removeClass("active");

          switch (getScreen()) {
            case "sm":
              rowEnd = allItems.eq(i + (1 - i % 2));
              break;
            case "md":
              rowEnd = allItems.eq(i + (3 - i % 4));
              break;
          }
          if (!rowEnd.length) {
            rowEnd = allItems.last();
          }

          if (rowEnd.next().hasClass("js-boat-brand-drawer-container")) {
            container = rowEnd.next();
            container.empty();
          } else {
            closeContainer();
            container = drawerWrapper.clone();
          }

          content.find(".close").on("click", function (e) {
            e.preventDefault();closeContainer();
          });

          container.html(content);
          container.insertAfter(rowEnd).slideDown();
          target.addClass("active");
        }
        var thisOffset;
        var getOffset = function getOffset() {
          thisOffset = container.offset().top;
          jQuery('html, body').animate({
            scrollTop: thisOffset - 220
          }, 400);
        };
        setTimeout(getOffset, 400);
      });
    }
  };
})(jQuery, Drupal);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjQtb3JnYW5pc21zL2JyYW5kLWdyaWQuanMiXSwibmFtZXMiOlsiJCIsIkRydXBhbCIsImRyYXdlcldyYXBwZXIiLCJnZXRTY3JlZW4iLCJzY3JlZW4iLCJ3aW5kb3ciLCJtYXRjaE1lZGlhIiwibWF0Y2hlcyIsImNsb3NlQ29udGFpbmVyIiwic2xpZGVVcCIsInJlbW92ZSIsInJlbW92ZUNsYXNzIiwiYmVoYXZpb3JzIiwiYnJhbmRHcmlkIiwiYXR0YWNoIiwiY29udGV4dCIsInNldHRpbmdzIiwiYWxsSXRlbXMiLCJlcSIsImNsb3Nlc3QiLCJwYXJlbnQiLCJjaGlsZHJlbiIsIm9uY2UiLCJjbGljayIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInRhcmdldCIsImRhdGFJbmRleCIsImF0dHIiLCJyZXBsYWNlIiwidHJpbSIsImNvbnRlbnQiLCJjbG9uZSIsInJlbW92ZUF0dHIiLCJpdGVtIiwicm93RW5kIiwiY29udGFpbmVyIiwiaSIsImluZGV4IiwibGVuZ3RoIiwibGFzdCIsIm5leHQiLCJoYXNDbGFzcyIsImVtcHR5IiwiZmluZCIsIm9uIiwiaHRtbCIsImluc2VydEFmdGVyIiwic2xpZGVEb3duIiwiYWRkQ2xhc3MiLCJ0aGlzT2Zmc2V0IiwiZ2V0T2Zmc2V0Iiwib2Zmc2V0IiwidG9wIiwialF1ZXJ5IiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsInNldFRpbWVvdXQiXSwibWFwcGluZ3MiOiI7O0FBQUEsQ0FBQyxVQUFVQSxDQUFWLEVBQWFDLE1BQWIsRUFBcUI7QUFDcEIsTUFBSUMsZ0JBQWdCRixFQUFFLDZFQUFGLENBQXBCOztBQUVBLE1BQUlHLFlBQVksU0FBWkEsU0FBWSxHQUFZO0FBQzFCLFFBQUlDLFNBQVMsSUFBYjs7QUFFQTtBQUNBLFFBQUlDLE9BQU9DLFVBQVAsQ0FBa0Isb0JBQWxCLEVBQXdDQyxPQUE1QyxFQUFxRDtBQUNuREgsZUFBUyxJQUFUO0FBQ0Q7O0FBRUQ7QUFDQSxRQUFJQyxPQUFPQyxVQUFQLENBQWtCLG9CQUFsQixFQUF3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TEQ7QUFNQU8sbUJBQVdOLFNBQVgsRUFBc0IsR0FBdEI7QUFDRCxPQWpERDtBQWtERDtBQXREMEIsR0FBN0I7QUF3REQsQ0FoRkQsRUFnRkdHLE1BaEZILEVBZ0ZXckQsTUFoRlgiLCJmaWxlIjoiNC1vcmdhbmlzbXMvYnJhbmQtZ3JpZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoJCwgRHJ1cGFsKSB7XG4gIHZhciBkcmF3ZXJXcmFwcGVyID0gJChcIjxkaXYgY2xhc3M9J2pzLWJvYXQtYnJhbmQtZHJhd2VyLWNvbnRhaW5lciBib2F0LWJyYW5kX19kcmF3ZXItY29udGFpbmVyJyAvPlwiKTtcblxuICB2YXIgZ2V0U2NyZWVuID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzY3JlZW4gPSBcInhzXCI7XG5cbiAgICAvLyBNb2JpbGUgYW5kIEFib3ZlXG4gICAgaWYgKHdpbmRvdy5tYXRjaE1lZGlhKCcobWluLXdpZHRoOiA1NzZweCknKS5tYXRjaGVzKSB7XG4gICAgICBzY3JlZW4gPSBcInNtXCI7XG4gICAgfVxuXG4gICAgLy8gVGFibGV0IGFuZCBBYm92ZVxuICAgIGlmICh3aW5kb3cubWF0Y2hNZWRpYSgnKG1pbi13aWR0aDogNzY4cHgpJykubWF0Y2hlcykge1xuICAgICAgc2NyZWVuID0gXCJtZFwiO1xuICAgIH1cblxuICAgIHJldHVybiBzY3JlZW47XG4gIH1cblxuICB2YXIgY2xvc2VDb250YWluZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgJChcIi5qcy1ib2F0LWJyYW5kLWRyYXdlci1jb250YWluZXJcIikuc2xpZGVVcChmdW5jdGlvbiAoKSB7ICQodGhpcykucmVtb3ZlKCkgfSk7XG4gICAgJChcIi5qcy1ib2F0LWJyYW5kLWl0ZW1cIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gIH1cblxuICBEcnVwYWwuYmVoYXZpb3JzLmJyYW5kR3JpZCA9IHtcbiAgICBhdHRhY2g6IGZ1bmN0aW9uIGF0dGFjaChjb250ZXh0LCBzZXR0aW5ncykge1xuICAgICAgdmFyIGFsbEl0ZW1zID0gJChcIi5qcy1ib2F0LWJyYW5kLWl0ZW1cIikuZXEoMCkuY2xvc2VzdChcIltjbGFzcyo9Y29sLV1cIikucGFyZW50KCkuY2hpbGRyZW4oXCJbY2xhc3MqPWNvbC1dXCIpO1xuXG4gICAgICAkKCcuanMtYm9hdC1icmFuZC1pdGVtJykub25jZSgpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdmFyIHRhcmdldCA9ICQoZS50YXJnZXQpLmNsb3Nlc3QoXCIuanMtYm9hdC1icmFuZC1pdGVtXCIpO1xuICAgICAgICB2YXIgZGF0YUluZGV4ID0gdGFyZ2V0LmF0dHIoXCJkYXRhLWluZGV4XCIpLnJlcGxhY2UoLzwhLS0oLio/KS0tPi9nLCBcIlwiKS50cmltKCk7XG4gICAgICAgIHZhciBjb250ZW50ID0gJChcIi5qcy1ib2F0LWJyYW5kLWRyYXdlci1jb250ZW50W2RhdGEtaW5kZXg9J1wiICsgZGF0YUluZGV4ICsgXCInXVwiKS5jbG9uZSgpLnJlbW92ZUF0dHIoXCJkYXRhLWluZGV4XCIpO1xuICAgICAgICB2YXIgaXRlbSA9IHRhcmdldC5jbG9zZXN0KFwiW2NsYXNzKj1jb2wtXVwiKTtcbiAgICAgICAgdmFyIHJvd0VuZCA9IGl0ZW07XG4gICAgICAgIHZhciBjb250YWluZXI7XG4gICAgICAgIHZhciBpID0gaXRlbS5pbmRleCgpO1xuXG5cbiAgICAgICAgaWYgKGNvbnRlbnQubGVuZ3RoKSB7XG4gICAgICAgICAgJChcIi5qcy1ib2F0LWJyYW5kLWl0ZW1cIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG5cbiAgICAgICAgICBzd2l0Y2ggKGdldFNjcmVlbigpKSB7XG4gICAgICAgICAgICBjYXNlIFwic21cIjpcbiAgICAgICAgICAgICAgcm93RW5kID0gYWxsSXRlbXMuZXEoaSArICgxIC0gaSAlIDIpKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWRcIjpcbiAgICAgICAgICAgICAgcm93RW5kID0gYWxsSXRlbXMuZXEoaSArICgzIC0gaSAlIDQpKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICghcm93RW5kLmxlbmd0aCkge1xuICAgICAgICAgICAgcm93RW5kID0gYWxsSXRlbXMubGFzdCgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChyb3dFbmQubmV4dCgpLmhhc0NsYXNzKFwianMtYm9hdC1icmFuZC1kcmF3ZXItY29udGFpbmVyXCIpKSB7XG4gICAgICAgICAgICBjb250YWluZXIgPSByb3dFbmQubmV4dCgpO1xuICAgICAgICAgICAgY29udGFpbmVyLmVtcHR5KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY2xvc2VDb250YWluZXIoKTtcbiAgICAgICAgICAgIGNvbnRhaW5lciA9IGRyYXdlcldyYXBwZXIuY2xvbmUoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250ZW50LmZpbmQoXCIuY2xvc2VcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkgeyBlLnByZXZlbnREZWZhdWx0KCk7IGNsb3NlQ29udGFpbmVyKCk7IH0pO1xuXG4gICAgICAgICAgY29udGFpbmVyLmh0bWwoY29udGVudCk7XG4gICAgICAgICAgY29udGFpbmVyLmluc2VydEFmdGVyKHJvd0VuZCkuc2xpZGVEb3duKCk7XG4gICAgICAgICAgdGFyZ2V0LmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0aGlzT2Zmc2V0XG4gICAgICAgIHZhciBnZXRPZmZzZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICB0aGlzT2Zmc2V0ID0gY29udGFpbmVyLm9mZnNldCgpLnRvcDtcbiAgICAgICAgICBqUXVlcnkoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgICAgIHNjcm9sbFRvcDogdGhpc09mZnNldCAtIDIyMFxuICAgICAgICAgIH0sIDQwMCk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0VGltZW91dChnZXRPZmZzZXQsIDQwMCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59KShqUXVlcnksIERydXBhbCk7XG4iXX0=
