<?php

/**
 * @file
 * Primary module hooks for CodeMirror editor module.
 */

use Drupal\Component\Serialization\Yaml;

/**
 * Implements hook_library_info_build().
 */
function codemirror_editor_library_info_build() {

  $library_builder = \Drupal::service('codemirror_editor.library_builder');

  $libraries['codemirror'] = $library_builder->build();

  // Also register CodeMirror 5 for long term support.
  $libraries['codemirror_5'] = $libraries['codemirror'];

  return $libraries;
}

/**
 * Implements hook_js_settings_build().
 */
function codemirror_editor_js_settings_build(array &$settings) {
  if (isset($settings['codeMirrorEditor'])) {
    $buttons_path = drupal_get_path('module', 'codemirror_editor') . '/images/buttons.svg';
    $settings['codeMirrorEditor']['buttonsBaseUrl'] = file_create_url($buttons_path);
    $config = \Drupal::config('codemirror_editor.settings');
    $settings['codeMirrorEditor']['theme'] = $config->get('theme');
  }
  if (isset($settings['codeMirrorFormatter'])) {
    $config = \Drupal::config('codemirror_editor.settings');
    $settings['codeMirrorFormatter']['theme'] = $config->get('theme');
  }
}

/**
 * Implements hook_element_info_alter().
 */
function codemirror_editor_element_info_alter(array &$info) {
  $info['textarea']['#pre_render'][] = 'codemirror_editor_pre_render_textarea';
}

/**
 * Enables CodeMirror editor for a textarea.
 *
 * @param array $element
 *   An associative array containing the properties of the textarea.
 *
 * @return array
 *   The modified textarea element.
 */
function codemirror_editor_pre_render_textarea(array $element) {
  if (isset($element['#codemirror'])) {
    $element['#attributes']['data-codemirror'] = json_encode($element['#codemirror']);
    $element['#attached']['library'][] = 'codemirror_editor/editor';
  }
  return $element;
}

/**
 * Loads CodeMirror language modes.
 *
 * @return array
 *   The definitions of CodeMirror language modes.
 */
function codemirror_editor_load_modes() {
  static $modes;
  if (!$modes) {
    $file = DRUPAL_ROOT . '/' . drupal_get_path('module', 'codemirror_editor') . '/codemirror_editor.language_modes.yml';
    $modes_encoded = file_get_contents($file);
    $modes = Yaml::decode($modes_encoded);
  }
  return $modes;
}

/**
 * Normalizes language mode.
 *
 * @param string $mode
 *   Language mode to normalize.
 *
 * @return string
 *   Normalized language mode.
 */
function codemirror_editor_normalize_mode($mode) {
  $mode = strtolower($mode);
  if (strpos($mode, '/') === FALSE) {
    // HTML is actually just a subtype of XML.
    if ($mode == 'html') {
      $mode = 'text/html';
    }
    else {
      $modes = codemirror_editor_load_modes();
      if (isset($modes[$mode])) {
        // Consider the first declared mime type as a default one.
        // @see codemirror_editor.language_modes.yml
        $mode = key($modes[$mode]['mime_types']);
      }
    }
  }
  return $mode;
}
