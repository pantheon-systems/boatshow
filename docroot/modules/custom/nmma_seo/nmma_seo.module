<?php

/**
 * @file
 * Module file for NMMA SEO.
 */

use Drupal\Core\Url;
use Drupal\nmma_custom_pages\EntityHelp;

/**
 * Implements hook_google_tag_snippets_alter().
 */
function nmma_seo_google_tag_snippets_alter(&$snippets) {
  if (TRUE !== \Drupal::moduleHandler()->moduleExists('google_tag')) {
    return;
  }
  $data_layer = _google_tag_variable_clean('data_layer');

  $data_layer_object = [
    // This should be populated if we want to override the url as our default
    // page name in GA.  If used, please follow breadcrumb structure.
    // Usually the URL directory structure is a good base.   The key is for the
    // name to be easily identifiable and traceable to a site page.
    'nmma.digitaldata.pagename' => '',
    // Doctor, patient, employer.
    'nmma.digitaldata.visitorType' => '',
    // This should be set by a config split or something but the possible values
    // are: dev, stage, prod.
    'nmma.digitaldata.sysEnvironment' => 'dev',
  ];

  // Allow other modules to alter the default data layer object.
  \Drupal::moduleHandler()->alter('nmma_seo_default_google_data_layer_object', $snippets);

  // Build data layer snippet.
  $script = "var $data_layer = [" . json_encode($data_layer_object) . '];';
  $snippets['data_layer'] = $script;
}

/**
 * Implements hook_page_attachments_alter().
 *
 * An example of how to use the node to change the dataLayer:
 *
 * if ($node instanceof \Drupal\node\NodeInterface) {
 *   $nid = $node->id();
 *   $values[] = ['nmma.digitaldata.pagename' => 'Current Nid: ' . $nid];
 * }
 */
function nmma_seo_page_attachments_alter(array &$attachments) {
  if (TRUE === \Drupal::moduleHandler()->moduleExists('google_tag')) {
    $values = [];
    // Allow other modules to alter the data layer object on a per page basis.
    $node = \Drupal::routeMatch()->getParameter('node');
    \Drupal::moduleHandler()
      ->alter('nmma_seo_perpage_google_data_layer_object', $values, $node);
    if (!empty($values)) {
      $attachments['#attached']['library'][] = 'nmma_seo/data_layer_onready';
      module_load_include('inc', 'google_tag', 'includes/snippet');
      $attachments['#attached']['drupalSettings']['nmmaSeo']['dataLayerOnready']['data_layer_name'] = _google_tag_variable_clean('data_layer');
      $attachments['#attached']['drupalSettings']['nmmaSeo']['dataLayerOnready']['values'] = $values;
    }
  }
  // Update the data attributes of clickable elements so they are tracked.
  $attachments['#attached']['library'][] = 'nmma_seo/data_attributes';
  // Hook into add to any social share for social click tracking.
  if (TRUE === \Drupal::moduleHandler()->moduleExists('addtoany')) {
    $attachments['#attached']['library'][] = 'nmma_seo/addtoany';
  }
}

/**
 * Implements hook_link_alter().
 */
function nmma_seo_link_alter(&$variables) {
  // Retrieve the front page alias and system path once per page load.
  $front_page = &drupal_static(__FUNCTION__ . '_front_page');
  $front_alias = &drupal_static(__FUNCTION__ . '_front_alias');
  if (NULL === $front_page && NULL === $front_alias) {
    $site_config = \Drupal::config('system.site');
    $front_page = $site_config->get('page.front');
    $front_alias = \Drupal::service('path.alias_manager')->getAliasByPath(
      $front_page
    );
  }
  // Check every URL in every link to see if it's the homepage. Replace it with
  // <front> that will directly to / instead of redirecting.
  if (in_array($variables['url']->toString(), [$front_page, $front_alias])) {
    $variables['url'] = Url::fromRoute('<front>');
  }
}

/**
 * Implements hook_library_info_alter().
 */
function nmma_seo_library_info_alter(&$libraries, $extension) {
  // Change the JS file that attaches .validate() to all forms to our own so
  // we can add different settings (like a callback.).
  if (!empty($libraries['cv.jquery.validate']) && isset($libraries['cv.jquery.validate']['js']['js/cv.jquery.validate.js'])) {
    $new_path = '/' . drupal_get_path('module', 'nmma_seo') . '/js/cv.jquery.validate.js';
    $libraries['cv.jquery.validate']['js'][$new_path] = $libraries['cv.jquery.validate']['js']['js/cv.jquery.validate.js'];
    unset($libraries['cv.jquery.validate']['js']['js/cv.jquery.validate.js']);
  }
}

/**
 * Implements hook_preprocess_field().
 */
function nmma_seo_preprocess_field(&$variables) {
  switch ($variables['element']['#field_name']) {
    case 'field_bus_phone':
      foreach ($variables['items'] as $key => $item) {
        $variables['items'][$key]['content']['#options']['attributes']['data-gtm-tracking'] = 'find a dealer - click to call - ' . EntityHelp::getTextValue($variables['element']['#object'], 'title');
      }
      break;

    case 'field_bus_url':
      foreach ($variables['items'] as $key => $item) {
        $variables['items'][$key]['content']['#options']['attributes']['data-gtm-tracking'] = sprintf(
          'find a dealer - %s - %s',
          EntityHelp::getTextValue($variables['element']['#object'], 'field_bus_url'),
          EntityHelp::getTextValue($variables['element']['#object'], 'title')
        );
      }
      break;

  }
}
