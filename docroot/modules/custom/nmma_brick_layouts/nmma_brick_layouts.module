<?php

/**
 * @file
 * Contains nmma_brick_layouts.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function nmma_brick_layouts_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the nmma_brick_layouts module.
    case 'help.page.nmma_brick_layouts':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('NMMA Custom Bricks Layouts') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function nmma_brick_layouts_theme() {
  return [
    'nmma_brick_layouts' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function nmma_brick_layouts_preprocess_eck_entity (&$variables) {
  if (isset($variables['entity']['#layout'])) {
    $variables['attributes']['class'][] = 'brick-with-nmma-layout--' . $variables['entity']['#layout'];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function nmma_brick_layouts_preprocess_layout(&$variables) {
  $content_array = $variables['content'];
  $counter = 0;

  $variables['attributes']['class'][] = 'nmma-layout';
  $variables['attributes']['class'][] = 'nmma-layout--' . $variables['theme_hook_original'];
  $variables['attributes']['class'][] = 'flex-container'; // Todo: maybe this should be applied directly into nmma-layout using a mixin?

  // Add some legacy classes

  if ($variables['theme_hook_original'] == 'single_column_grid') {
    $variables['attributes']['class'][] = 'one-column';
  }

  if ($variables['theme_hook_original'] == 'two_column_grid') {
    $variables['attributes']['class'][] = 'two-columns';
  }

  if ($variables['theme_hook_original'] == 'three_column_grid') {
    // Note: no 'three-columns' class was used
  }

  if ($variables['theme_hook_original'] == 'four_column_grid') {
    $variables['attributes']['class'][] = 'four-columns';
  }

  if ($variables['theme_hook_original'] == 'four_column_even_grid') {
  }

  if ($variables['theme_hook_original'] == 'disruptor_one_column') {
    $variables['attributes']['class'][] = 'disruptor';
  }

  if ($variables['theme_hook_original'] == 'disruptor_two_column') {
    $variables['attributes']['class'][] = 'disruptor';

    foreach ($content_array as $key => $val) {
      if (is_int($key)) {
        $counter++;
      }
      $variables['counter'] = $counter;
    }
  }
}

/**
 * Implements hook_layout_alter().
 */
function nmma_brick_layouts_layout_alter(&$definitions) {
  // Disable default layouts.
  unset($definitions['layout_onecol']);
  unset($definitions['layout_twocol']);
  unset($definitions['layout_twocol_bricks']);
  unset($definitions['layout_threecol_25_50_25']);
  unset($definitions['layout_threecol_33_34_33']);
}

/**
 * Defines allowed values for config field.storage.brick.field_background_color
 * @link https://drupal.stackexchange.com/a/242011
 */
function nmma_brick_layouts_background_color_allowed_values_function () {

  $options = [
    'white' => 'white',
    'white-transparency' => 'white-transparency',
    'light-gray' => 'light-gray',
    'dark-gray' => 'dark-gray',
    'city-primary' => 'city-primary',
    'city-secondary' => 'city-secondary',
    'city-tertiary' => 'city-tertiary (where available)'
  ];

  return $options;
}

/**
 * Defines allowed values for config field.storage.brick.field_container_type
 * @link https://drupal.stackexchange.com/a/242011
 */
function nmma_brick_layouts_container_type_allowed_values_function () {

  $options = [

    'normal' => 'normal',
    'expand' => 'expand',
    'contract' => 'compress',
    'contract-more' => 'compress-more'
  ];

  return $options;
}

/**
 * Defines allowed values for config field.storage.brick.field_vertical_pull
 * @link https://drupal.stackexchange.com/a/242011
 */
function nmma_brick_layouts_vertical_pull_allowed_values_function () {

  $options = [
    'pull' => 'Pull',
    'push' => 'Push'
  ];

  return $options;
}

/**
 * Defines allowed values for config field.storage.brick.field_vertical_padding
 * @link https://drupal.stackexchange.com/a/242011
 */
function nmma_brick_layouts_vertical_padding_allowed_values_function () {

  $options = [
    'both' => 'both',
    'top' => 'top',
    'bottom' => 'bottom'
  ];

  return $options;
}

/**
 * Defines allowed values for config field.storage.brick.field_headline_effect
 * @link https://drupal.stackexchange.com/a/242011
 */
function nmma_brick_layouts_headline_effect_allowed_values_function () {

  $options = [
    'thickthin' => 'thickthin',
    'labelmaker' => 'labelmaker',
    'citycolor' => 'citycolor'
  ];

  return $options;
}

/**
 * Defines allowed values for config field.storage.brick.field_location_features
 * @link https://drupal.stackexchange.com/a/242011
 */
function nmma_brick_layouts_features_effect_allowed_values_function () {

  $options = [
    'parking' => 'parking',
    'handicap_parking' => 'handicap_parking',
    'rideshare_drop_off' => 'rideshare_drop_off',
  ];

  return $options;
}

/**
 * Defines allowed values for config field.storage.node.field_offer_type.yml
 * @link https://drupal.stackexchange.com/a/242011
 */
function nmma_brick_layouts_offer_type_allowed_values_function () {

  $options = [
    'job' => 'job',
    'deal' => 'deal'
  ];

  return $options;
}

/**
 * Implements HOOK_page_attachments
 */
function nmma_brick_layouts_page_attachments(array &$attachments) {
  $config = \Drupal::config('system.theme');
  $theme = \Drupal::theme()->getActiveTheme()->getName();

  if ($theme == $config->get('admin')) {
    $attachments['#attached']['library'][] = 'nmma_brick_layouts/wysiwyg';
  }
}
