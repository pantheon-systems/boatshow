<?php

/**
 * @file
 * Contains fbip.module..
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Symfony\Component\HttpFoundation;

/**
 * Implements hook_help().
 */
function fbip_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the fbip module.
    case 'help.page.fbip':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Keeps a track of from submissions of all monitored forms and blocks IP address when thresholds are reached') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function fbip_theme() {
  $theme = [];

  return $theme;
}

/**
 * Implements hook_form_alter().
 */
function fbip_form_alter(&$form, $form_state, $form_id) {
  $form['#validate'][] = 'fbip_validator';
  if (_fbip_is_applicable()) {
    $validator_to_be_added = FALSE;
    $control_all_forms = \Drupal::config('fbip.settings')->get('fbip_all');
    if ($control_all_forms) {
      $validator_to_be_added = TRUE;
    }
    else {
      $form_ids_to_control = explode("\r\n", \Drupal::config('fbip.settings')->get('fbip_form_ids'));
      if (in_array($form_id, $form_ids_to_control)) {
        $validator_to_be_added = TRUE;
      }
    }
    if ($validator_to_be_added) {
      $form['#validate'][] = 'fbip_validator';
    }
  }
}

/**
 * Validation callback: The validator added to all monitored forms
 *
 */
function fbip_validator($form, FormStateInterface $form_state) {
  if (_fbip_is_applicable()) {
    if (!(Drupal::flood()->isAllowed('fbip', \Drupal::config('fbip.settings')->get('fbip_threshold'), \Drupal::config('fbip.settings')->get('fbip_window')))) {
      db_insert('ban_ip')
          ->fields(array(
            'ip' => \Drupal::request()->getClientIp(),
          ))
          ->execute();
    }
    else {
      Drupal::flood()->register('fbip', \Drupal::config('fbip.settings')->get('fbip_window'));
    }
  }
}

/**
 * Implements hook_cron().
 */
function fbip_cron() {
  if (\Drupal::config('fbip.settings')->get('fbip_reset')) {
    db_delete('blocked_ips')
        ->execute();
  }
}

/**
 * Helper Function to validate if FBI restriction is in place for the user
 */
function _fbip_is_applicable() {
  $applicable = TRUE;
  if (\Drupal::currentUser()->hasPermission('bypass fbip')) {
    $applicable = FALSE;
  }
  elseif (in_array(\Drupal::request()->getClientIp(), explode("\r\n", \Drupal::config('fbip.settings')->get('fbip_form_whitelist')))) {
    $applicable = FALSE;
  }
  return $applicable;
}
